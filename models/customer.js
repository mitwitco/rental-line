'use strict';
module.exports = (sequelize, DataTypes) => {
    const customer = sequelize.define('customer', {
        customerId: {
            type: DataTypes.INTEGER,
            primaryKey: true,
            notNull: true,
            autoIncrement: true
        },
        cus_code: { type: DataTypes.STRING, notNull: false, },
        cus_name: { type: DataTypes.STRING, notNull: false, },
        salesmanId: { type: DataTypes.INTEGER, notNull: false, },
        virtual_account: { type: DataTypes.STRING, notNull: false, },
        region: { type: DataTypes.STRING, notNull: false, },
        industry: { type: DataTypes.INTEGER, notNull: false, },
        est_fuel_volume: { type: DataTypes.INTEGER, notNull: false, },
        phone: { type: DataTypes.STRING, notNull: false, },
        fax: { type: DataTypes.STRING, notNull: false, },
        vat_number: { type: DataTypes.STRING, notNull: false, },
        company_title: { type: DataTypes.STRING, notNull: false, },
        front_pwd: { type: DataTypes.STRING, notNull: false, },
        contract_start: { type: DataTypes.STRING, notNull: false, },
        contract_end: { type: DataTypes.STRING, notNull: false, },
        low_balance_notice: { type: DataTypes.INTEGER, notNull: false, },
        fuel_grace_limit: { type: DataTypes.INTEGER, notNull: false, },
        reg_address: { type: DataTypes.STRING, notNull: false, },
        mail_address: { type: DataTypes.STRING, notNull: false, },
        transaction_mode: { type: DataTypes.STRING, notNull: false, },
        invoice_notes: { type: DataTypes.STRING, notNull: false, },
        contract_status: { type: DataTypes.STRING, notNull: false, }, 
        contract_sales: { type: DataTypes.STRING, notNull: false, },
        card_fee: { type: DataTypes.STRING, notNull: false, },
        reissue_fee: { type: DataTypes.STRING, notNull: false, },
        sales_notes: { type: DataTypes.STRING, notNull: false, },
        deposit: { type: DataTypes.INTEGER, notNull: false, },
        contract_notes: { type: DataTypes.STRING, notNull: false, },
        updated: { type: DataTypes.STRING, notNull: false, },
        created: { type: DataTypes.STRING, notNull: false, },
        submission_date: { type: DataTypes.STRING, notNull: false, },
        remittance_date: { type: DataTypes.STRING, notNull: false, },
        fuel_sms_phone: { type: DataTypes.STRING, notNull: false, },
        fuel_sms_option: { type: DataTypes.STRING, notNull: false, },
        balance_sms_phone: { type: DataTypes.STRING, notNull: false, },
        config_method: { type: DataTypes.STRING, notNull: false, },
        config_notes: { type: DataTypes.STRING, notNull: false, },
        card_fee_notes: { type: DataTypes.STRING, notNull: false, },
        createTime: { type: DataTypes.STRING, notNull: false, },
        updateTime: { type: DataTypes.STRING, notNull: false, },
        deleteTime: { type: DataTypes.STRING, notNull: false, },
        con_notes: { type: DataTypes.STRING, notNull: false, },
        card_other_fee: { type: DataTypes.STRING, notNull: false, },
        card_handling:  { type: DataTypes.DECIMAL(7, 3), notNull: false, }, 
        month_gas: { type: DataTypes.STRING, notNull: false, },
        month_balance: { type: DataTypes.STRING, notNull: false, },
    }, { operatorAliases: true, freezeTableName: true, timestamps: false });

    return customer
}

